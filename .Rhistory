knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
df <- read_csv('adult_census.csv')
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
df <- read_csv('adult_census.csv')
df <- df %>%
select(-education.num, -native.country, -relationship)
df <- df %>%
rename(target = income)
df <- df %>%
mutate(target = as.factor(target))
library(caret)
set.seed(2020)
splitIndex <- createDataPartition(df$target, p = .70,
list = FALSE)
df_train <- df[ splitIndex,]
df_test <- df[-splitIndex,]
library(rpart)
tree_model <- rpart(target ~ ., data = df_train,
control = rpart.control(maxdepth = 3))
pred <- predict(tree_model, df_test, type = "class")
cm <- confusionMatrix(data = pred, reference = df_test$target, positive = ">50K")
cm$overall[1]
library(rattle)
install.packages("rattle")
library(rattle)
fancyRpartPlot(tree_model)
tree_model$variable.importance
barplot(tree_model$variable.importance)
tree_model2 <- rpart(target ~ ., data = df_train,
control = rpart.control(maxdepth = 4))
pred <- predict(tree_model2, df_test, type = "class")
cm <- confusionMatrix(data = pred, reference = df_test$target, positive = ">50K")
cm$overall[1]
library(randomForest)
install.packages("randomForest")
library(randomForest)
forest_model = randomForest(target ~ ., data=df_train, ntree = 1000)
pred <- predict(forest_model, df_test, type = "class")
cm <- confusionMatrix(data = pred, reference = df_test$target, positive = ">50K")
cm$overall[1]
importance(forest_model)
barplot(forest_model$variable.importance)
forest_model2 = randomForest(target ~ ., data=df_train, ntree = 4)
pred <- predict(forest_model2, df_test, type = "class")
cm <- confusionMatrix(data = pred, reference = df_test$target, positive = ">50K")
cm$overall[1]
barplot(tree_model$variable.importance)
barplot(forest_model$variable.importance)
forest_model$variable.importanc
importance(forest_model)
barplot(forest_model)
#install.packages("randomForest")
library(randomForest)
forest_model = randomForest(target ~ ., data=df_train, ntree = 1000)
importance(forest_model)
barplot(forest_model)
barplot(forest_model$importance)
forest_model$terms
forest_model2 = randomForest(target ~ ., data=df_train, ntree = 4)
pred <- predict(forest_model2, df_test, type = "class")
cm <- confusionMatrix(data = pred, reference = df_test$target, positive = ">50K")
cm$overall[1]
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
install.packages(mlbench)
install.packages(mlbench)
install.packages(mlbench)
library(mlbench)
library(mlbench)
library(mlbench)
library(tidyverse)
data(PimaIndiansDiabetes)
df <- tibble(PimaIndiansDiabetes)
